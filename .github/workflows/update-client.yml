name: Update Client

# Set environment variables available in all jobs and steps
env:
  python_version: "3.9"

# Cancel in-progress jobs or runs for the current workflow
concurrency:
  group: ${{ github.workflow }}-${{ inputs.branch || github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:
    inputs:
      branch:
        description:
          "Branch to commit updated client changes to:"
        required: true
  pull_request:
    paths:
      - extensions/**
      - client/**

jobs:
  get-all-service-definition:
    name: Get all-service definition
    runs-on: ubuntu-latest
    steps:
    - name: Checkout API-Uniform-Contract repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GIT_SECRET }}
        repository: Arm-Debug/API-Uniform-Contract
        path: API-Uniform-Contract
        ref: production
    - uses: actions/upload-artifact@master
      with:
        name: all-service-flat
        path: API-Uniform-Contract/all/1/

  update-go:
    name: Update Go
    runs-on: ubuntu-latest
    needs: update-client
    steps:
    - uses: actions/checkout@v3
      with:
        # So that we have correct GIT_TOKEN to push back to branch as we need workflow permissions
        token: ${{ secrets.GIT_SECRET }}
        ref: ${{ inputs.branch || github.head_ref || github.ref }}
    - name: Update Go
      uses: Arm-Debug/update-go-action@v1.4.1
      with:
        dockerfile: Dockerfile.client
        branch: ${{ inputs.branch || github.head_ref || github.ref }}

  update-client:
    name: Update client
    runs-on: ubuntu-latest
    needs: get-all-service-definition
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch || github.head_ref || github.ref }}
    - name: Download all-service-flat artefact
      uses: actions/download-artifact@master
      with:
        name: all-service-flat
        path: all-service-definition
    - name: Download openapi-generator
      run: |
        mkdir -p /usr/local/bin/
        curl  https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh > /usr/local/bin/openapi-generator
        chmod u+x /usr/local/bin/openapi-generator
    - name: Generate client
      run: |
        ls all-service-definition
        chmod +x ./scripts/generate-client.sh
        ./scripts/generate-client.sh -i all-service-definition/all-def-flat.yaml -o client -d
    - name: Copy extensions to client
      run: |
        if [ -d ./extensions/ ] ; then cp -r extensions/. client/ ; fi
    - name: Fix **os.File bug
      # FIXME remove when https://github.com/OpenAPITools/openapi-generator/issues/12810 is fixed
      run: |
        sed -i -e 's/**os.File/*os.File/g' ./client/api_build_jobs.go
    - name: Check for client changes
      run: |
        SERVER_UPDATE="$(if [[ $(git status client/* --porcelain | grep -v go.mod  | grep -v go.sum) ]] ; then echo 'âœ¨ New server autogenerated files' ; fi)"
        if [[ $SERVER_UPDATE ]] ; then echo "SERVER_UPDATE=$SERVER_UPDATE" >> $GITHUB_ENV ; fi
    - name: Setup python
      if: env.SERVER_UPDATE != ''
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python_version }}
    - name: Install continuous-delivery-scripts
      if: env.SERVER_UPDATE != ''
      run: |
        pip install continuous-delivery-scripts
    - name: Generate News File
      if: env.SERVER_UPDATE != ''
      run: |
        if [[ "${{ env.SERVER_UPDATE }}" ]] ; then cd-create-news-file --type feature "Updated client due to schema changes" ; fi
    - name: Commit changes
      if: env.SERVER_UPDATE != ''
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: ":sparkles: Automatic changes -> ${{ env.SERVER_UPDATE }} [ci skip]"
        file_pattern: client/* changes/*
        commit_user_name: monty-bot
        commit_user_email: monty-bot@arm.com

  build-and-test:
    name: Build and Test
    needs:
      - update-go
      - update-client
    uses: ./.github/workflows/build-and-test.yml
    secrets: inherit
    with:
      branch: ${{ inputs.branch || github.head_ref || github.ref }}

  release:
    name: Release if necessary
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
    - uses: actions/checkout@v3
    - run: gh workflow run release.yml -f release_type=release
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
